
[2010-03-02]
============

- Rename StringData to CharsData.

- Consider splitting bind::Data into 2 parts -- one that deals with position,
  another for tag.

[2010-03-01]
============

+ Added ability to specify NULL value for the data to be bound. For that,
  sk::oci::Data#null(bool) is now available.

[2010-02-28]
============

+ Added method info() that returns more detailed information than inspect().
  Changed apps to use this method for presentations.

+ Implemented internal processing for column level return codes and for the
  resulting data sizes.

+ Implemented useColumnCodes() for db::Statement and db::Cursor to
  control processing of columm level return codes.

+ Implemented methods useTruncate() for db::Statement and db::Cursor.

+ Got rid of fetchIgnoreTruncate() -- db::Statement#fetch() now map 1406 to 0
  when useTruncate flag is set.

+ Added methods sk::oci::Data#getSize() and sk::oci::Data#getColumnCode().

+ Implemented control for SUCCESS_WITH_INFO after fetch(). Added method 
  sk::oci::Cursor#hasInfo() to query whether info was available. 
  NOTE: it is always the case when column level return codes are used.

[2010-02-27]
============

+ [2010-02-28]
  Implement inspect() for bind::IntData and bind::StringData.

+ [2010-02-28]
  Change apps to use inspect() for data presentation.

[2010-02-26]
============

+ [2010-02-27]
  bind::Data must return non-const uint32_t reference so that it can be
  modified.

+ [2010-02-27]
  Specific bind data type classes, like bind::Integer and bind::String, will
  take care of construction and inspect().

- bind::Registry#boundMutableDataAt() must return non-const reference to bind::Data.

- db::oci::Statement must have boundMutableDataAt() to make it possible to modify bound
  data (say, for the new iterations).

[2010-03-02]
+ Bind by tag.

- retrieve by tag.

- Array capable data binds.

+ [2010-02-28]
  Support for resulting data lengths.

+ [2010-02-28]
  Support for column-level return codes.

- Implement mocking

- Make it possible to wrap existing oracle connections.
